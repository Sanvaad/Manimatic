"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./lib/local-store.ts":
/*!****************************!*\
  !*** ./lib/local-store.ts ***!
  \****************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   useLocalChatStore: () => (/* binding */ useLocalChatStore)\n/* harmony export */ });\n/* harmony import */ var zustand__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! zustand */ \"(app-pages-browser)/./node_modules/zustand/esm/react.mjs\");\n/* harmony import */ var zustand_middleware__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! zustand/middleware */ \"(app-pages-browser)/./node_modules/zustand/esm/middleware.mjs\");\n/* __next_internal_client_entry_do_not_use__ useLocalChatStore auto */ \n\nconst useLocalChatStore = (0,zustand__WEBPACK_IMPORTED_MODULE_0__.create)()((0,zustand_middleware__WEBPACK_IMPORTED_MODULE_1__.persist)((set, get)=>({\n        chats: [],\n        messages: [],\n        currentChatId: null,\n        sidebarWidth: 300,\n        createChat: function() {\n            let title = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : \"New Chat\";\n            const chatId = \"chat_\".concat(Date.now());\n            const newChat = {\n                id: chatId,\n                title,\n                created_at: new Date(),\n                updated_at: new Date()\n            };\n            set((state)=>({\n                    chats: [\n                        newChat,\n                        ...state.chats\n                    ],\n                    currentChatId: chatId\n                }));\n            return chatId;\n        },\n        setCurrentChat: (chatId)=>{\n            set({\n                currentChatId: chatId\n            });\n            if (chatId) {\n                get().loadMessages(chatId);\n            }\n        },\n        deleteChat: (chatId)=>{\n            set((state)=>({\n                    chats: state.chats.filter((chat)=>chat.id !== chatId),\n                    messages: state.messages.filter((msg)=>msg.chat_id !== chatId),\n                    currentChatId: state.currentChatId === chatId ? null : state.currentChatId\n                }));\n        },\n        updateChatTitle: (chatId, title)=>{\n            set((state)=>({\n                    chats: state.chats.map((chat)=>chat.id === chatId ? {\n                            ...chat,\n                            title,\n                            updated_at: new Date()\n                        } : chat)\n                }));\n        },\n        loadChats: ()=>{\n        // Chats are automatically loaded from persistence\n        },\n        addMessage: (chatId, content, role)=>{\n            const message = {\n                id: \"msg_\".concat(Date.now(), \"_\").concat(Math.random()),\n                content,\n                role,\n                timestamp: new Date(),\n                chat_id: chatId\n            };\n            set((state)=>({\n                    messages: [\n                        ...state.messages,\n                        message\n                    ],\n                    chats: state.chats.map((chat)=>chat.id === chatId ? {\n                            ...chat,\n                            updated_at: new Date()\n                        } : chat)\n                }));\n        },\n        loadMessages: (chatId)=>{\n        // Messages are automatically loaded from persistence\n        // Filter is done in the component\n        },\n        setSidebarWidth: (width)=>{\n            set({\n                sidebarWidth: width\n            });\n        }\n    }), {\n    name: \"manimatic-chat-store\"\n}));\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL2xpYi9sb2NhbC1zdG9yZS50cyIsIm1hcHBpbmdzIjoiOzs7Ozs7dUVBRWdDO0FBQ1k7QUF1Q3JDLE1BQU1FLG9CQUFvQkYsK0NBQU1BLEdBQ3JDQywyREFBT0EsQ0FDTCxDQUFDRSxLQUFLQyxNQUFTO1FBQ2JDLE9BQU8sRUFBRTtRQUNUQyxVQUFVLEVBQUU7UUFDWkMsZUFBZTtRQUNmQyxjQUFjO1FBRWRDLFlBQVk7Z0JBQUNDLHlFQUFRO1lBQ25CLE1BQU1DLFNBQVMsUUFBbUIsT0FBWEMsS0FBS0MsR0FBRztZQUMvQixNQUFNQyxVQUFnQjtnQkFDcEJDLElBQUlKO2dCQUNKRDtnQkFDQU0sWUFBWSxJQUFJSjtnQkFDaEJLLFlBQVksSUFBSUw7WUFDbEI7WUFFQVQsSUFBSWUsQ0FBQUEsUUFBVTtvQkFDWmIsT0FBTzt3QkFBQ1M7MkJBQVlJLE1BQU1iLEtBQUs7cUJBQUM7b0JBQ2hDRSxlQUFlSTtnQkFDakI7WUFFQSxPQUFPQTtRQUNUO1FBRUFRLGdCQUFnQixDQUFDUjtZQUNmUixJQUFJO2dCQUFFSSxlQUFlSTtZQUFPO1lBQzVCLElBQUlBLFFBQVE7Z0JBQ1ZQLE1BQU1nQixZQUFZLENBQUNUO1lBQ3JCO1FBQ0Y7UUFFQVUsWUFBWSxDQUFDVjtZQUNYUixJQUFJZSxDQUFBQSxRQUFVO29CQUNaYixPQUFPYSxNQUFNYixLQUFLLENBQUNpQixNQUFNLENBQUNDLENBQUFBLE9BQVFBLEtBQUtSLEVBQUUsS0FBS0o7b0JBQzlDTCxVQUFVWSxNQUFNWixRQUFRLENBQUNnQixNQUFNLENBQUNFLENBQUFBLE1BQU9BLElBQUlDLE9BQU8sS0FBS2Q7b0JBQ3ZESixlQUFlVyxNQUFNWCxhQUFhLEtBQUtJLFNBQVMsT0FBT08sTUFBTVgsYUFBYTtnQkFDNUU7UUFDRjtRQUVBbUIsaUJBQWlCLENBQUNmLFFBQVFEO1lBQ3hCUCxJQUFJZSxDQUFBQSxRQUFVO29CQUNaYixPQUFPYSxNQUFNYixLQUFLLENBQUNzQixHQUFHLENBQUNKLENBQUFBLE9BQ3JCQSxLQUFLUixFQUFFLEtBQUtKLFNBQ1I7NEJBQUUsR0FBR1ksSUFBSTs0QkFBRWI7NEJBQU9PLFlBQVksSUFBSUw7d0JBQU8sSUFDekNXO2dCQUVSO1FBQ0Y7UUFFQUssV0FBVztRQUNULGtEQUFrRDtRQUNwRDtRQUVBQyxZQUFZLENBQUNsQixRQUFRbUIsU0FBU0M7WUFDNUIsTUFBTUMsVUFBbUI7Z0JBQ3ZCakIsSUFBSSxPQUFxQmtCLE9BQWRyQixLQUFLQyxHQUFHLElBQUcsS0FBaUIsT0FBZG9CLEtBQUtDLE1BQU07Z0JBQ3BDSjtnQkFDQUM7Z0JBQ0FJLFdBQVcsSUFBSXZCO2dCQUNmYSxTQUFTZDtZQUNYO1lBRUFSLElBQUllLENBQUFBLFFBQVU7b0JBQ1paLFVBQVU7MkJBQUlZLE1BQU1aLFFBQVE7d0JBQUUwQjtxQkFBUTtvQkFDdEMzQixPQUFPYSxNQUFNYixLQUFLLENBQUNzQixHQUFHLENBQUNKLENBQUFBLE9BQ3JCQSxLQUFLUixFQUFFLEtBQUtKLFNBQ1I7NEJBQUUsR0FBR1ksSUFBSTs0QkFBRU4sWUFBWSxJQUFJTDt3QkFBTyxJQUNsQ1c7Z0JBRVI7UUFDRjtRQUVBSCxjQUFjLENBQUNUO1FBQ2IscURBQXFEO1FBQ3JELGtDQUFrQztRQUNwQztRQUVBeUIsaUJBQWlCLENBQUNDO1lBQ2hCbEMsSUFBSTtnQkFBRUssY0FBYzZCO1lBQU07UUFDNUI7SUFDRixJQUNBO0lBQ0VDLE1BQU07QUFDUixJQUVIIiwic291cmNlcyI6WyIvVXNlcnMvc2FudmFkc2hlbmRlL0Rvd25sb2Fkcy9NYW5pbWF0aWMtbWFzdGVyIDIvbGliL2xvY2FsLXN0b3JlLnRzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIGNsaWVudFwiXG5cbmltcG9ydCB7IGNyZWF0ZSB9IGZyb20gXCJ6dXN0YW5kXCJcbmltcG9ydCB7IHBlcnNpc3QgfSBmcm9tIFwienVzdGFuZC9taWRkbGV3YXJlXCJcblxuZXhwb3J0IGludGVyZmFjZSBNZXNzYWdlIHtcbiAgaWQ6IHN0cmluZ1xuICBjb250ZW50OiBzdHJpbmdcbiAgcm9sZTogJ3VzZXInIHwgJ2Fzc2lzdGFudCdcbiAgdGltZXN0YW1wOiBEYXRlXG4gIGNoYXRfaWQ6IHN0cmluZ1xuICBhbmltYXRpb25fdXJsPzogc3RyaW5nXG59XG5cbmV4cG9ydCBpbnRlcmZhY2UgQ2hhdCB7XG4gIGlkOiBzdHJpbmdcbiAgdGl0bGU6IHN0cmluZ1xuICBjcmVhdGVkX2F0OiBEYXRlXG4gIHVwZGF0ZWRfYXQ6IERhdGVcbn1cblxuaW50ZXJmYWNlIENoYXRTdG9yZSB7XG4gIGNoYXRzOiBDaGF0W11cbiAgbWVzc2FnZXM6IE1lc3NhZ2VbXVxuICBjdXJyZW50Q2hhdElkOiBzdHJpbmcgfCBudWxsXG4gIHNpZGViYXJXaWR0aDogbnVtYmVyXG4gIFxuICAvLyBDaGF0IGFjdGlvbnNcbiAgY3JlYXRlQ2hhdDogKHRpdGxlPzogc3RyaW5nKSA9PiBzdHJpbmdcbiAgc2V0Q3VycmVudENoYXQ6IChjaGF0SWQ6IHN0cmluZyB8IG51bGwpID0+IHZvaWRcbiAgZGVsZXRlQ2hhdDogKGNoYXRJZDogc3RyaW5nKSA9PiB2b2lkXG4gIHVwZGF0ZUNoYXRUaXRsZTogKGNoYXRJZDogc3RyaW5nLCB0aXRsZTogc3RyaW5nKSA9PiB2b2lkXG4gIGxvYWRDaGF0czogKCkgPT4gdm9pZFxuICBcbiAgLy8gTWVzc2FnZSBhY3Rpb25zXG4gIGFkZE1lc3NhZ2U6IChjaGF0SWQ6IHN0cmluZywgY29udGVudDogc3RyaW5nLCByb2xlOiAndXNlcicgfCAnYXNzaXN0YW50JykgPT4gdm9pZFxuICBsb2FkTWVzc2FnZXM6IChjaGF0SWQ6IHN0cmluZykgPT4gdm9pZFxuICBcbiAgLy8gVUkgc3RhdGVcbiAgc2V0U2lkZWJhcldpZHRoOiAod2lkdGg6IG51bWJlcikgPT4gdm9pZFxufVxuXG5leHBvcnQgY29uc3QgdXNlTG9jYWxDaGF0U3RvcmUgPSBjcmVhdGU8Q2hhdFN0b3JlPigpKFxuICBwZXJzaXN0KFxuICAgIChzZXQsIGdldCkgPT4gKHtcbiAgICAgIGNoYXRzOiBbXSxcbiAgICAgIG1lc3NhZ2VzOiBbXSxcbiAgICAgIGN1cnJlbnRDaGF0SWQ6IG51bGwsXG4gICAgICBzaWRlYmFyV2lkdGg6IDMwMCxcbiAgICAgIFxuICAgICAgY3JlYXRlQ2hhdDogKHRpdGxlID0gXCJOZXcgQ2hhdFwiKSA9PiB7XG4gICAgICAgIGNvbnN0IGNoYXRJZCA9IGBjaGF0XyR7RGF0ZS5ub3coKX1gXG4gICAgICAgIGNvbnN0IG5ld0NoYXQ6IENoYXQgPSB7XG4gICAgICAgICAgaWQ6IGNoYXRJZCxcbiAgICAgICAgICB0aXRsZSxcbiAgICAgICAgICBjcmVhdGVkX2F0OiBuZXcgRGF0ZSgpLFxuICAgICAgICAgIHVwZGF0ZWRfYXQ6IG5ldyBEYXRlKCksXG4gICAgICAgIH1cbiAgICAgICAgXG4gICAgICAgIHNldChzdGF0ZSA9PiAoe1xuICAgICAgICAgIGNoYXRzOiBbbmV3Q2hhdCwgLi4uc3RhdGUuY2hhdHNdLFxuICAgICAgICAgIGN1cnJlbnRDaGF0SWQ6IGNoYXRJZCxcbiAgICAgICAgfSkpXG4gICAgICAgIFxuICAgICAgICByZXR1cm4gY2hhdElkXG4gICAgICB9LFxuICAgICAgXG4gICAgICBzZXRDdXJyZW50Q2hhdDogKGNoYXRJZCkgPT4ge1xuICAgICAgICBzZXQoeyBjdXJyZW50Q2hhdElkOiBjaGF0SWQgfSlcbiAgICAgICAgaWYgKGNoYXRJZCkge1xuICAgICAgICAgIGdldCgpLmxvYWRNZXNzYWdlcyhjaGF0SWQpXG4gICAgICAgIH1cbiAgICAgIH0sXG4gICAgICBcbiAgICAgIGRlbGV0ZUNoYXQ6IChjaGF0SWQpID0+IHtcbiAgICAgICAgc2V0KHN0YXRlID0+ICh7XG4gICAgICAgICAgY2hhdHM6IHN0YXRlLmNoYXRzLmZpbHRlcihjaGF0ID0+IGNoYXQuaWQgIT09IGNoYXRJZCksXG4gICAgICAgICAgbWVzc2FnZXM6IHN0YXRlLm1lc3NhZ2VzLmZpbHRlcihtc2cgPT4gbXNnLmNoYXRfaWQgIT09IGNoYXRJZCksXG4gICAgICAgICAgY3VycmVudENoYXRJZDogc3RhdGUuY3VycmVudENoYXRJZCA9PT0gY2hhdElkID8gbnVsbCA6IHN0YXRlLmN1cnJlbnRDaGF0SWQsXG4gICAgICAgIH0pKVxuICAgICAgfSxcbiAgICAgIFxuICAgICAgdXBkYXRlQ2hhdFRpdGxlOiAoY2hhdElkLCB0aXRsZSkgPT4ge1xuICAgICAgICBzZXQoc3RhdGUgPT4gKHtcbiAgICAgICAgICBjaGF0czogc3RhdGUuY2hhdHMubWFwKGNoYXQgPT5cbiAgICAgICAgICAgIGNoYXQuaWQgPT09IGNoYXRJZFxuICAgICAgICAgICAgICA/IHsgLi4uY2hhdCwgdGl0bGUsIHVwZGF0ZWRfYXQ6IG5ldyBEYXRlKCkgfVxuICAgICAgICAgICAgICA6IGNoYXRcbiAgICAgICAgICApLFxuICAgICAgICB9KSlcbiAgICAgIH0sXG4gICAgICBcbiAgICAgIGxvYWRDaGF0czogKCkgPT4ge1xuICAgICAgICAvLyBDaGF0cyBhcmUgYXV0b21hdGljYWxseSBsb2FkZWQgZnJvbSBwZXJzaXN0ZW5jZVxuICAgICAgfSxcbiAgICAgIFxuICAgICAgYWRkTWVzc2FnZTogKGNoYXRJZCwgY29udGVudCwgcm9sZSkgPT4ge1xuICAgICAgICBjb25zdCBtZXNzYWdlOiBNZXNzYWdlID0ge1xuICAgICAgICAgIGlkOiBgbXNnXyR7RGF0ZS5ub3coKX1fJHtNYXRoLnJhbmRvbSgpfWAsXG4gICAgICAgICAgY29udGVudCxcbiAgICAgICAgICByb2xlLFxuICAgICAgICAgIHRpbWVzdGFtcDogbmV3IERhdGUoKSxcbiAgICAgICAgICBjaGF0X2lkOiBjaGF0SWQsXG4gICAgICAgIH1cbiAgICAgICAgXG4gICAgICAgIHNldChzdGF0ZSA9PiAoe1xuICAgICAgICAgIG1lc3NhZ2VzOiBbLi4uc3RhdGUubWVzc2FnZXMsIG1lc3NhZ2VdLFxuICAgICAgICAgIGNoYXRzOiBzdGF0ZS5jaGF0cy5tYXAoY2hhdCA9PlxuICAgICAgICAgICAgY2hhdC5pZCA9PT0gY2hhdElkXG4gICAgICAgICAgICAgID8geyAuLi5jaGF0LCB1cGRhdGVkX2F0OiBuZXcgRGF0ZSgpIH1cbiAgICAgICAgICAgICAgOiBjaGF0XG4gICAgICAgICAgKSxcbiAgICAgICAgfSkpXG4gICAgICB9LFxuICAgICAgXG4gICAgICBsb2FkTWVzc2FnZXM6IChjaGF0SWQpID0+IHtcbiAgICAgICAgLy8gTWVzc2FnZXMgYXJlIGF1dG9tYXRpY2FsbHkgbG9hZGVkIGZyb20gcGVyc2lzdGVuY2VcbiAgICAgICAgLy8gRmlsdGVyIGlzIGRvbmUgaW4gdGhlIGNvbXBvbmVudFxuICAgICAgfSxcbiAgICAgIFxuICAgICAgc2V0U2lkZWJhcldpZHRoOiAod2lkdGgpID0+IHtcbiAgICAgICAgc2V0KHsgc2lkZWJhcldpZHRoOiB3aWR0aCB9KVxuICAgICAgfSxcbiAgICB9KSxcbiAgICB7XG4gICAgICBuYW1lOiBcIm1hbmltYXRpYy1jaGF0LXN0b3JlXCIsXG4gICAgfVxuICApXG4pIl0sIm5hbWVzIjpbImNyZWF0ZSIsInBlcnNpc3QiLCJ1c2VMb2NhbENoYXRTdG9yZSIsInNldCIsImdldCIsImNoYXRzIiwibWVzc2FnZXMiLCJjdXJyZW50Q2hhdElkIiwic2lkZWJhcldpZHRoIiwiY3JlYXRlQ2hhdCIsInRpdGxlIiwiY2hhdElkIiwiRGF0ZSIsIm5vdyIsIm5ld0NoYXQiLCJpZCIsImNyZWF0ZWRfYXQiLCJ1cGRhdGVkX2F0Iiwic3RhdGUiLCJzZXRDdXJyZW50Q2hhdCIsImxvYWRNZXNzYWdlcyIsImRlbGV0ZUNoYXQiLCJmaWx0ZXIiLCJjaGF0IiwibXNnIiwiY2hhdF9pZCIsInVwZGF0ZUNoYXRUaXRsZSIsIm1hcCIsImxvYWRDaGF0cyIsImFkZE1lc3NhZ2UiLCJjb250ZW50Iiwicm9sZSIsIm1lc3NhZ2UiLCJNYXRoIiwicmFuZG9tIiwidGltZXN0YW1wIiwic2V0U2lkZWJhcldpZHRoIiwid2lkdGgiLCJuYW1lIl0sImlnbm9yZUxpc3QiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./lib/local-store.ts\n"));

/***/ })

});
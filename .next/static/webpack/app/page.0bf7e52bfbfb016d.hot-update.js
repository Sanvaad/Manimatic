/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./lib/supabase-store.ts":
/*!*******************************!*\
  !*** ./lib/supabase-store.ts ***!
  \*******************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   useSupabaseChatStore: () => (/* binding */ useSupabaseChatStore)\n/* harmony export */ });\n/* harmony import */ var zustand__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! zustand */ \"(app-pages-browser)/./node_modules/zustand/esm/react.mjs\");\n/* harmony import */ var _supabase__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./supabase */ \"(app-pages-browser)/./lib/supabase.ts\");\n/* harmony import */ var _supabase__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_supabase__WEBPACK_IMPORTED_MODULE_0__);\n\n\nconst useSupabaseChatStore = (0,zustand__WEBPACK_IMPORTED_MODULE_1__.create)((set, get)=>({\n        chats: [],\n        currentChatId: null,\n        sidebarWidth: 280,\n        loading: false,\n        loadChats: async ()=>{\n            set({\n                loading: true\n            });\n            try {\n                const { data: chats, error } = await _supabase__WEBPACK_IMPORTED_MODULE_0__.supabase.from('chats').select('*').order('updated_at', {\n                    ascending: false\n                });\n                if (error) throw error;\n                set({\n                    chats: chats || []\n                });\n            } catch (error) {\n                console.error('Error loading chats:', error);\n            } finally{\n                set({\n                    loading: false\n                });\n            }\n        },\n        createChat: async function() {\n            let title = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : 'New Chat';\n            set({\n                loading: true\n            });\n            try {\n                const { data: { user } } = await _supabase__WEBPACK_IMPORTED_MODULE_0__.supabase.auth.getUser();\n                if (!user) throw new Error('User not authenticated');\n                const { data: chat, error } = await _supabase__WEBPACK_IMPORTED_MODULE_0__.supabase.from('chats').insert({\n                    user_id: user.id,\n                    title\n                }).select().single();\n                if (error) throw error;\n                if (chat) {\n                    set((state)=>({\n                            chats: [\n                                chat,\n                                ...state.chats\n                            ],\n                            currentChatId: chat.id\n                        }));\n                    return chat.id;\n                }\n            } catch (error) {\n                console.error('Error creating chat:', error);\n            } finally{\n                set({\n                    loading: false\n                });\n            }\n            return null;\n        },\n        deleteChat: async (chatId)=>{\n            try {\n                const { error } = await _supabase__WEBPACK_IMPORTED_MODULE_0__.supabase.from('chats').delete().eq('id', chatId);\n                if (error) throw error;\n                set((state)=>{\n                    const newChats = state.chats.filter((chat)=>chat.id !== chatId);\n                    const newCurrentChatId = state.currentChatId === chatId ? newChats.length > 0 ? newChats[0].id : null : state.currentChatId;\n                    return {\n                        chats: newChats,\n                        currentChatId: newCurrentChatId\n                    };\n                });\n            } catch (error) {\n                console.error('Error deleting chat:', error);\n            }\n        },\n        setCurrentChat: (chatId)=>{\n            set({\n                currentChatId: chatId\n            });\n        },\n        loadMessages: async (chatId)=>{\n            try {\n                const { data: messages, error } = await _supabase__WEBPACK_IMPORTED_MODULE_0__.supabase.from('messages').select('*').eq('chat_id', chatId).order('created_at', {\n                    ascending: true\n                });\n                if (error) throw error;\n                set((state)=>({\n                        chats: state.chats.map((chat)=>chat.id === chatId ? {\n                                ...chat,\n                                messages: messages || []\n                            } : chat)\n                    }));\n            } catch (error) {\n                console.error('Error loading messages:', error);\n            }\n        },\n        addMessage: async (chatId, content, type, animationUrl)=>{\n            try {\n                const { data: message, error } = await _supabase__WEBPACK_IMPORTED_MODULE_0__.supabase.from('messages').insert({\n                    chat_id: chatId,\n                    content,\n                    type,\n                    animation_url: animationUrl || null\n                }).select().single();\n                if (error) throw error;\n                if (message) {\n                    set((state)=>({\n                            chats: state.chats.map((chat)=>{\n                                var _chat_messages;\n                                return chat.id === chatId ? {\n                                    ...chat,\n                                    messages: [\n                                        ...chat.messages || [],\n                                        message\n                                    ],\n                                    updated_at: message.created_at,\n                                    title: (((_chat_messages = chat.messages) === null || _chat_messages === void 0 ? void 0 : _chat_messages.length) || 0) === 0 ? content.slice(0, 50) + \"...\" : chat.title\n                                } : chat;\n                            })\n                        }));\n                    // Update chat's updated_at timestamp\n                    await _supabase__WEBPACK_IMPORTED_MODULE_0__.supabase.from('chats').update({\n                        updated_at: new Date().toISOString()\n                    }).eq('id', chatId);\n                }\n            } catch (error) {\n                console.error('Error adding message:', error);\n            }\n        },\n        updateChatTitle: async (chatId, title)=>{\n            try {\n                const { error } = await _supabase__WEBPACK_IMPORTED_MODULE_0__.supabase.from('chats').update({\n                    title,\n                    updated_at: new Date().toISOString()\n                }).eq('id', chatId);\n                if (error) throw error;\n                set((state)=>({\n                        chats: state.chats.map((chat)=>chat.id === chatId ? {\n                                ...chat,\n                                title,\n                                updated_at: new Date().toISOString()\n                            } : chat)\n                    }));\n            } catch (error) {\n                console.error('Error updating chat title:', error);\n            }\n        },\n        setSidebarWidth: (width)=>{\n            set({\n                sidebarWidth: width\n            });\n        },\n        getCurrentChat: ()=>{\n            const state = get();\n            return state.chats.find((chat)=>chat.id === state.currentChatId) || null;\n        }\n    }));\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./lib/supabase-store.ts\n"));

/***/ }),

/***/ "(app-pages-browser)/./lib/supabase.ts":
/*!*************************!*\
  !*** ./lib/supabase.ts ***!
  \*************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval(__webpack_require__.ts("// Supabase configuration removed - auth functionality disabled\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL2xpYi9zdXBhYmFzZS50cyIsIm1hcHBpbmdzIjoiQUFBQSwrREFBK0QiLCJzb3VyY2VzIjpbIi9Vc2Vycy9zYW52YWRzaGVuZGUvRG93bmxvYWRzL01hbmltYXRpYy1tYXN0ZXIgMi9saWIvc3VwYWJhc2UudHMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gU3VwYWJhc2UgY29uZmlndXJhdGlvbiByZW1vdmVkIC0gYXV0aCBmdW5jdGlvbmFsaXR5IGRpc2FibGVkXG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./lib/supabase.ts\n"));

/***/ })

});